apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nodejs-tester-server
    app.kubernetes.io/component: nodejs-tester-server
    app.kubernetes.io/instance: nodejs-tester-server
  name: nodejs-tester-server
  namespace: istio-testing
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      deployment: nodejs-tester-server
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: null
      labels:
        deployment: nodejs-tester-server
    spec:
      containers:
      - env:
          - name: HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: PORT
            value: '8080'
        readinessProbe:
          httpGet:
            path: /
            port: 8080
            scheme: HTTP
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /
            port: 8080
            scheme: HTTP
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        image: image-registry.openshift-image-registry.svc:5000/istio-testing/nodejs-tester-server@sha256:be0db748f98da6de8d0cbaa681a003f48be5af24e414d992495303e6536702a3
        imagePullPolicy: IfNotPresent
        name: nodejs-tester-server
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
